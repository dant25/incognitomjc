package Lexer;

/* Generated By:JavaCC: Do not edit this line. IncognitoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface IncognitoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int WHILE = 9;
  /** RegularExpression Id. */
  int PUBLIC = 10;
  /** RegularExpression Id. */
  int MAIN = 11;
  /** RegularExpression Id. */
  int CLASS = 12;
  /** RegularExpression Id. */
  int EXTENDS = 13;
  /** RegularExpression Id. */
  int RETURN = 14;
  /** RegularExpression Id. */
  int PRINT = 15;
  /** RegularExpression Id. */
  int LENGTH = 16;
  /** RegularExpression Id. */
  int NEW = 17;
  /** RegularExpression Id. */
  int THIS = 18;
  /** RegularExpression Id. */
  int BOOLEAN = 19;
  /** RegularExpression Id. */
  int INT = 20;
  /** RegularExpression Id. */
  int TRUE = 21;
  /** RegularExpression Id. */
  int FALSE = 22;
  /** RegularExpression Id. */
  int EXCLAMATION = 23;
  /** RegularExpression Id. */
  int STRING_ARRAY = 24;
  /** RegularExpression Id. */
  int INT_ARRAY = 25;
  /** RegularExpression Id. */
  int L_PARENTHESIS = 26;
  /** RegularExpression Id. */
  int R_PARENTHESIS = 27;
  /** RegularExpression Id. */
  int LCURLYBRACE = 28;
  /** RegularExpression Id. */
  int RCURLYBRACE = 29;
  /** RegularExpression Id. */
  int LSQUAREBRACKET = 30;
  /** RegularExpression Id. */
  int RSQUAREBRACKET = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int COMMA = 33;
  /** RegularExpression Id. */
  int DOT = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int LESS_THAN = 36;
  /** RegularExpression Id. */
  int PLUS = 37;
  /** RegularExpression Id. */
  int MINUS = 38;
  /** RegularExpression Id. */
  int STAR = 39;
  /** RegularExpression Id. */
  int ASSIGNEQUAL = 40;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 41;
  /** RegularExpression Id. */
  int ID = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"public\"",
    "\"public static void main\"",
    "\"class\"",
    "\"extends\"",
    "\"return\"",
    "\"System.out.println\"",
    "\"length\"",
    "\"new\"",
    "\"this\"",
    "\"boolean\"",
    "\"int\"",
    "\"true\"",
    "\"false\"",
    "\"!\"",
    "<STRING_ARRAY>",
    "<INT_ARRAY>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"=\"",
    "<INTEGER_LITERAL>",
    "<ID>",
    "<DIGIT>",
  };

}
